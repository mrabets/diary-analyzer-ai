service: diary-analyzer-ai

image: mrabets/diary-analyzer-ai

servers:
  web:
    hosts:
      - 157.230.118.51
  job:
    hosts:
      - 157.230.118.51
    cmd: bundle exec sidekiq -q default -q mailers

registry:
  username: mrabets
  password:
    - KAMAL_REGISTRY_PASSWORD

env:
  clear:
    DB_HOST: 157.230.118.51
    RAILS_SERVE_STATIC_FILES: true
    RAILS_LOG_TO_STDOUT: true
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - SERVER_HOST
    - SENDGRID_API_KEY
    - REDIS_URL
    - ELASTICSEARCH_URL
    - STRIPE_PUBLISHABLE_KEY
    - STRIPE_SECRET_KEY
    - STRIPE_SUBSCRIPTION_PLAN_ID
    - STRIPE_ENDPOINT_SECRET

accessories:
  db:
    image: postgres:15
    host: 157.230.118.51
    port: 5432
    env:
      clear:
        POSTGRES_USER: 'diary_analyzer_ai'
        POSTGRES_DB: 'diary_analyzer_ai_production'
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data
  redis:
    image: redis:7.2
    host: 157.230.118.51
    port: 6379
    directories:
      - data:/data
  elasticsearch:
    image: elasticsearch:7.10.1
    host: 157.230.118.51
    port: 9200
    env:
      clear:
        discovery.type: single-node
        bootstrap.memory_lock: true
        xpack.security.enabled: "false"
        ES_JAVA_OPTS: -Xms512m -Xmx512m
    directories:
      - data:/var/lib/elasticsearch/data


# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
#
# allow_empty_roles: false
